内容的概括，具体内容在后面的章节
1,表达式的定义
    可以被求值并会产生一个值的短语
2，主表达式
    不再包含更简单的表达式的表达式
    常量、字面量、保留字、变量、全局对象属性、初始化
3，数组初始化
    let matrix=[1,,,,3];
4，属性访问表达式
    对象属性或数组元素
    a.name:.无法访问数组
    a["name"]:方括号中可以是变量或表达式
    a[1]
5，条件式属性访问
    ES2020新增属性访问表达式
    let a={b:null};
    a.b?.c.d //=>undefined
    当a.b也是对象时
    let a={b:{}};
    a.b?.c?.d//---疑惑点
6，调用表达式
    访问函数时用到
7，条件式调用
    函数名?.(参数)
    function square(x,log){
    if(log){
        log(x);
    }
    //简写为 log?.(x);
    //只会检测是否为null或undefined，不会检测是否为函数
    }
8，对象创建表达式
    new Object();
    没有参数可以省略后面的括号
9，操作符
    见图1、图2，优先级由高到底，结合性由左到右
10，算数表达式（略看）
    ** 幂：具有右结合性
    *乘
    /除
    %取余
    +
    -
    优先级从高到低
    NaN：计算式无法得出数字值的结果时

    1，+
        优先字符串拼接，如果是对象，则调用对象的valueOf方法和toString方法返回原始值。
        字符串拼接不具有优先结合性，依次从左到右执行
    2，一元算数运算符
    3，位操作符
        &、|、^、~、<<、>>、>>>
11,关系表达式（略看）
    相等与不相等操作符
        == === ！= ！===
        严格相等与严格不相等：
            类型比较，不做类型转换
    比较运算符
12，in操作符
    左侧的字符串是否为右侧对象中的属性
    左侧的数值是否存在与右侧的数组中
13，instanceof操作符
    左侧为对象实例，右侧为对象类名
    为右侧对象的实例为true
    右侧不是对象的时候会报错：TypeError
14，逻辑表达式
    && || ！
15，赋值表达式
    通过操作赋值：+=
16，eval（）操作符
    不推荐使用 略
17，条件操作符
    ？：
18，先定义操作符
    let a=b??c;
    b不是null或undefined则赋值给a，否则返回c
    同理：let a=b??c??d;
19,typeof操作符
    类型操作符
    可能的值(字符串值)：undefined,object,boolean,number,bigint,string,symbol,function
20，instanceof操作符
    区分不同对象的类
21，delecte
    删除对象指定属性或数组的某个值
22，await操作符
    2017新增，用于异步编程
23，void操作符
    返回必是undefined
24，逗号操作符
    常用场景，for循环
