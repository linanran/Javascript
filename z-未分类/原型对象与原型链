1，什么是原型对象？

每个函数的prototype属性指向一个对象，这个对象被称为该函数的原型或原型对象

建议统称为该函数的pototype，使用英文而非中文，避免歧义，下面的_proto_同理

2，原型对象与构造函数、实例之间的关系？

_*proto*_：原型链（链接点）

_*proto*_为实例对象的一个属性（有些关系图标中会以[[prototype]]的形式表示），也是一个对象

实例对象的_proto_指向该对象的构造函数的prototype

图：p.png

图：object.png

function Test(){
this.a=1;
}
Test.prototype.b=2;
const test = new Test();
console.log(test);
/*
结果为：
Test.a=1;
Test._proto_.b=2;
*/
3，原型对象的作用

所有的JavaScript 实例都会从一个 原型对象中继承属性和方法，因此可以通过prototype 属性可以给构造函数添加新的属性和新的方法，让所有该构造函数的实例都共享这些属性和方法

4，原型链

原型链是什么：以一个对象为基准，以_proto_为连接的这条链条直到Object.prototype为止的这条链。

为什么叫原型链呢？因为它是由对象原型为起始点连起来的链条

```jsx
Object.prototype.c=3;
console.log(test.a);
console.log(test.b);
console.log(test.c);
/*
test{
a:1,
_proto_:Test.prototype{
b:2,
_proto_:object.prototype={
c=3
_proto_:null
}
}
}
*/
```
